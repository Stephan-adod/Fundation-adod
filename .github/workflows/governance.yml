name: governance

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'tickets/**'
      - 'docs/**'
      - 'artefacts/**'
      - 'scripts/**'
      - '.github/workflows/**'

concurrency:
  group: governance-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  run-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          persist-credentials: true
      - uses: actions/setup-node@v4
        with: { node-version: 20 }

      - name: Prettier (check)
        id: prettier
        continue-on-error: true
        run: npx --yes prettier --check .

      - name: Prettier (write & commit)
        if: steps.prettier.outcome == 'failure'
        run: |
          npx --yes prettier --write .
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git commit -am "chore(prettier): auto-format via CI" || echo "nothing to commit"
          git push origin HEAD:${{ github.head_ref }}

      - name: Prettier (re-check)
        run: npx --yes prettier --check .

  run-utf8:
    runs-on: ubuntu-latest
    needs: run-checks
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20 }
      - name: UTF-8 / BOM / spacing
        run: node scripts/check-utf8.mjs --root .

  validate-all:
    runs-on: ubuntu-latest
    needs: run-utf8
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20 }
      - name: Validate all tickets (non-strict)
        run: node scripts/validate-ticket.mjs

  collect-changed:
    runs-on: ubuntu-latest
    needs: validate-all
    outputs:
      tickets: ${{ steps.set.outputs.tickets }}
    steps:
      - uses: actions/checkout@v4
      - name: Collect changed tickets
        id: set
        shell: bash
        run: |
          BASE=${{ github.base_ref }}
          CHANGED=$(git diff --name-only origin/$BASE...${{ github.sha }} | grep -E '^tickets/AT-[0-9]+\.md$' || true)
          echo "tickets=$(printf '%s\n' "$CHANGED" | jq -R -s 'split("\n")|map(select(length>0))')" >> "$GITHUB_OUTPUT"

  validate-changed:
    runs-on: ubuntu-latest
    needs: collect-changed
    if: ${{ fromJson(needs.collect-changed.outputs.tickets).length > 0 }}
    strategy:
      matrix:
        file: ${{ fromJson(needs.collect-changed.outputs.tickets) }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20 }
      - name: Validate changed ticket (strict)
        run: node scripts/validate-ticket.mjs --strict --file "${{ matrix.file }}"
